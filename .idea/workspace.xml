<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0f22acf0-5eca-4652-b5f1-5c103ad65161" name="Changes" comment="add migrations with dbmate">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/checkdefinition.go" beforeDir="false" afterPath="$PROJECT_DIR$/checkdefinition.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/hlc.go" beforeDir="false" afterPath="$PROJECT_DIR$/hlc.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/lib/golang" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;sumpfgottheit&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:sumpfgottheit/go-kamonitu.git&quot;,
    &quot;accountId&quot;: &quot;4520341a-40d0-4ad5-8217-5673b5289fdf&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2qt7JbtX5PW05sIFTuNAG6EN9m2" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.describe-configfiles.executor": "Run",
    "Go Build.dump-config.executor": "Run",
    "Go Build.go build go-kamonitu.executor": "Run",
    "Go Build.run.executor": "Run",
    "Go Build.show-check-definitions.executor": "Run",
    "Go Build.show-config.executor": "Run",
    "Go Build.show-defaults.executor": "Run",
    "Go Build.validate-config.executor": "Debug",
    "Go Build.wip.executor": "Run",
    "Go Test.TestGetFieldNamesForStruct/empty_struct in go-kamonitu.executor": "Debug",
    "Go Test.TestLoadCheckDefinitionDefaults in go-kamonitu.executor": "Run",
    "Go Test.TestLoadCheckDefinitionDefaults/Defaults_und_Hardcoded_Defaults_1:1_aber_nur_ein_Paramater_gesetzts in go-kamonitu.executor": "Run",
    "Go Test.TestLoadCheckDefinitionDefaults/Empty_file#01 in go-kamonitu.executor": "Run",
    "Go Test.TestLoadCheckDefinitionDefaults/Ungültige_Wert in go-kamonitu.executor": "Run",
    "Go Test.TestLoadCheckDefinitionDefaults/Ungültiger_Key in go-kamonitu.executor": "Run",
    "Go Test.TestLoadCheckDefinitionDefaults/Überschreibe_interval_seconds_between_checks in go-kamonitu.executor": "Run",
    "Go Test.TestLoadDefinitionsFilesMtimeMap in go-kamonitu.executor": "Run",
    "Go Test.TestLoadDefinitionsFilesMtimeMap/Invalid_directory in go-kamonitu.executor": "Debug",
    "Go Test.TestLoadDefinitionsFilesMtimeMapInvalidDirectory in go-kamonitu.executor": "Run",
    "Go Test.TestMakeCheckDefinitionFileStore in go-kamonitu.executor": "Run",
    "Go Test.TestParseStringMapToStruct in go-kamonitu.executor": "Run",
    "Go Test.TestParseStringMapToStruct/invalid_int_value_in_map in go-kamonitu.executor": "Run",
    "Go Test.TestParseStringMapToStruct/valid_mapping_to_struct in go-kamonitu.executor": "Debug",
    "Go Test.TestReadIniFile/Keys_with_whitespace in go-kamonitu.executor": "Run",
    "Go Test.TestReadIniFile/double_equals_sign in go-kamonitu.executor": "Run",
    "Go Test.TestReadIniFile/empty_ini_file in go-kamonitu.executor": "Run",
    "Go Test.TestReadIniFile/missing_equals_sign in go-kamonitu.executor": "Run",
    "Go Test.checkdefinition_test.go.executor": "Run",
    "Go Test.go test go-kamonitu.executor": "Run",
    "Go Test.inifile_test.go.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "master",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/home/saf/devel/go-kamonitu/_working_dir/etc/kamonitu/check_definitions",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "editor.preferences.fonts.default"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "sqlite"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/_working_dir/etc/kamonitu/check_definitions" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.validate-config">
    <configuration name="describe-configfiles" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="describe-configfiles" />
      <envs>
        <env name="KAMONITU_DEBUG" value="1" />
        <env name="KAMONITU_CONFIG_FILE" value="_working_dir/etc/kamonitu/kamonitu.ini" />
      </envs>
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2">
        <option name="GoBeforeRunTask" command="fmt" />
        <option name="GoBeforeRunTask" command="vet" />
      </method>
    </configuration>
    <configuration name="run" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="run" />
      <envs>
        <env name="KAMONITU_DEBUG" value="1" />
        <env name="KAMONITU_CONFIG_FILE" value="_working_dir/etc/kamonitu/kamonitu.ini" />
      </envs>
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2">
        <option name="GoBeforeRunTask" command="fmt" />
        <option name="GoBeforeRunTask" command="vet" />
      </method>
    </configuration>
    <configuration name="show-config" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="show-config" />
      <envs>
        <env name="KAMONITU_DEBUG" value="1" />
        <env name="KAMONITU_CONFIG_FILE" value="_working_dir/etc/kamonitu/kamonitu.ini" />
      </envs>
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2">
        <option name="GoBeforeRunTask" command="fmt" />
        <option name="GoBeforeRunTask" command="vet" />
      </method>
    </configuration>
    <configuration name="show-defaults" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="show-defaults" />
      <envs>
        <env name="KAMONITU_DEBUG" value="1" />
        <env name="KAMONITU_CONFIG_FILE" value="_working_dir/etc/kamonitu/kamonitu.ini" />
      </envs>
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2">
        <option name="GoBeforeRunTask" command="fmt" />
        <option name="GoBeforeRunTask" command="vet" />
      </method>
    </configuration>
    <configuration name="validate-config" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="validate-config " />
      <envs>
        <env name="KAMONITU_DEBUG" value="1" />
        <env name="KAMONITU_CONFIG_FILE" value="_working_dir/etc/kamonitu/kamonitu.ini" />
      </envs>
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2">
        <option name="GoBeforeRunTask" command="fmt" />
        <option name="GoBeforeRunTask" command="vet" />
      </method>
    </configuration>
    <configuration name="wip" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="wip" />
      <envs>
        <env name="KAMONITU_DEBUG" value="1" />
        <env name="KAMONITU_CONFIG_FILE" value="_working_dir/etc/kamonitu/kamonitu.ini" />
      </envs>
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2">
        <option name="GoBeforeRunTask" command="fmt" />
        <option name="GoBeforeRunTask" command="vet" />
      </method>
    </configuration>
    <configuration name="TestGetFieldNamesForStruct/empty_struct in go-kamonitu" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetFieldNamesForStruct\E$/^\Qempty_struct\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestLoadDefinitionsFilesMtimeMap in go-kamonitu" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestLoadDefinitionsFilesMtimeMap\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestLoadDefinitionsFilesMtimeMapInvalidDirectory in go-kamonitu" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestLoadDefinitionsFilesMtimeMapInvalidDirectory\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestMakeCheckDefinitionFileStore in go-kamonitu" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestMakeCheckDefinitionFileStore\E$" />
      <method v="2" />
    </configuration>
    <configuration name="checkdefinition_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/checkdefinition_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test go-kamonitu" type="GoTestRunConfiguration" factoryName="Go Test" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="DIRECTORY" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.validate-config" />
      <item itemvalue="Go Build.run" />
      <item itemvalue="Go Build.show-config" />
      <item itemvalue="Go Build.show-defaults" />
      <item itemvalue="Go Build.describe-configfiles" />
      <item itemvalue="Go Build.wip" />
      <item itemvalue="Go Test.go test go-kamonitu" />
      <item itemvalue="Go Test.checkdefinition_test.go" />
      <item itemvalue="Go Test.TestGetFieldNamesForStruct/empty_struct in go-kamonitu" />
      <item itemvalue="Go Test.TestLoadDefinitionsFilesMtimeMap in go-kamonitu" />
      <item itemvalue="Go Test.TestLoadDefinitionsFilesMtimeMapInvalidDirectory in go-kamonitu" />
      <item itemvalue="Go Test.TestMakeCheckDefinitionFileStore in go-kamonitu" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.checkdefinition_test.go" />
        <item itemvalue="Go Test.TestMakeCheckDefinitionFileStore in go-kamonitu" />
        <item itemvalue="Go Test.TestGetFieldNamesForStruct/empty_struct in go-kamonitu" />
        <item itemvalue="Go Test.TestLoadDefinitionsFilesMtimeMapInvalidDirectory in go-kamonitu" />
        <item itemvalue="Go Test.TestLoadDefinitionsFilesMtimeMap in go-kamonitu" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-85c80fddc9a6-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.23654.119" />
        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-GO-243.23654.119" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="soviel" />
    <MESSAGE value="Korrektes Erkennen von Parametern und Env-Variablen" />
    <MESSAGE value="Composed Structs werden nich korrekt verarbeitet" />
    <MESSAGE value="inifile.ReadIniFile mit Tests" />
    <MESSAGE value="Weiter gehts" />
    <MESSAGE value="ParseStringMapToStruct with tests" />
    <MESSAGE value="Wieder was umgebaut" />
    <MESSAGE value="Refactor configuration management and improve loading logic&#10;&#10;Replace `appConfigMap` with `appConfigDefaultMap` to separate defaults from runtime values. Initialize `appConfigMap` dynamically and update logic for loading and overriding configuration values. Enhance check definition handling by adding a dedicated map and loading mechanism in `hlc.go`." />
    <MESSAGE value="Refactor configuration management and enhance CLI commands&#10;&#10;Reorganized configuration handling by introducing `appConfigDefaultMap` and improving validation logic. Added `show-defaults` and `describe-configfiles` commands to the CLI for better usability and clarity. Simplified and extended the handling of defaults and configuration overrides." />
    <MESSAGE value="Adjust check intervals and refactor default handling logic&#10;&#10;Updated the default and test values for `IntervalSecondsBetweenChecks` to 120 seconds. Refactored handling of default configurations, improving clarity and reducing redundancy. Fixed minor inconsistencies in log messages and configuration loading logic." />
    <MESSAGE value="Refactor configuration handling and improve CLI usability&#10;&#10;Renamed `dump-config` to `show-config` and enhanced its display logic for better readability, including tabular formatting. Exposed `AppConfigFilePath` to allow broader access for configuration debugging. Updated CLI commands and internal logic for consistency and improved maintainability." />
    <MESSAGE value="add migrations with dbmate" />
    <option name="LAST_COMMIT_MESSAGE" value="add migrations with dbmate" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/go_kamonitu$validate_config.out" NAME="validate-config Coverage Results" MODIFIED="1735994560573" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>