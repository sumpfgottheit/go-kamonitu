<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0f22acf0-5eca-4652-b5f1-5c103ad65161" name="Changes" comment="Composed Structs werden nich korrekt verarbeitet">
      <change afterPath="$PROJECT_DIR$/inifile_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inifile.go" beforeDir="false" afterPath="$PROJECT_DIR$/inifile.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/lib/golang" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2qt7JbtX5PW05sIFTuNAG6EN9m2" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build go-kamonitu.executor": "Run",
    "Go Build.validate-config.executor": "Run",
    "Go Build.wip.executor": "Run",
    "Go Test.TestReadIniFile/Keys_with_whitespace in go-kamonitu.executor": "Run",
    "Go Test.TestReadIniFile/double_equals_sign in go-kamonitu.executor": "Run",
    "Go Test.TestReadIniFile/empty_ini_file in go-kamonitu.executor": "Run",
    "Go Test.TestReadIniFile/missing_equals_sign in go-kamonitu.executor": "Run",
    "Go Test.inifile_test.go.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "master",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/home/saf/devel/go-kamonitu",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.sourceCode"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test go-kamonitu">
    <configuration name="validate-config" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="validate-config " />
      <envs>
        <env name="KAMONITU_DEBUG" value="1" />
        <env name="KAMONITU_CONFIG_FILE" value="_working_dir/etc/kamonitu/kamonitu.ini" />
      </envs>
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2">
        <option name="GoBeforeRunTask" command="fmt" />
        <option name="GoBeforeRunTask" command="vet" />
      </method>
    </configuration>
    <configuration name="wip" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <parameters value="wip" />
      <envs>
        <env name="KAMONITU_DEBUG" value="1" />
        <env name="KAMONITU_CONFIG_FILE" value="_working_dir/etc/kamonitu/kamonitu.ini" />
      </envs>
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2">
        <option name="GoBeforeRunTask" command="fmt" />
        <option name="GoBeforeRunTask" command="vet" />
      </method>
    </configuration>
    <configuration name="TestReadIniFile/Keys_with_whitespace in go-kamonitu" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestReadIniFile\E$/^\QKeys_with_whitespace\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestReadIniFile/double_equals_sign in go-kamonitu" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestReadIniFile\E$/^\Qdouble_equals_sign\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestReadIniFile/empty_ini_file in go-kamonitu" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestReadIniFile\E$/^\Qempty_ini_file\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestReadIniFile/missing_equals_sign in go-kamonitu" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestReadIniFile\E$/^\Qmissing_equals_sign\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test go-kamonitu" type="GoTestRunConfiguration" factoryName="Go Test" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <kind value="DIRECTORY" />
      <package value="go-kamonitu" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="inifile_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-kamonitu" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/inifile_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.validate-config" />
      <item itemvalue="Go Build.wip" />
      <item itemvalue="Go Test.go test go-kamonitu" />
      <item itemvalue="Go Test.TestReadIniFile/Keys_with_whitespace in go-kamonitu" />
      <item itemvalue="Go Test.TestReadIniFile/double_equals_sign in go-kamonitu" />
      <item itemvalue="Go Test.TestReadIniFile/empty_ini_file in go-kamonitu" />
      <item itemvalue="Go Test.TestReadIniFile/missing_equals_sign in go-kamonitu" />
      <item itemvalue="Go Test.inifile_test.go" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestReadIniFile/Keys_with_whitespace in go-kamonitu" />
        <item itemvalue="Go Test.inifile_test.go" />
        <item itemvalue="Go Test.TestReadIniFile/missing_equals_sign in go-kamonitu" />
        <item itemvalue="Go Test.TestReadIniFile/double_equals_sign in go-kamonitu" />
        <item itemvalue="Go Test.TestReadIniFile/empty_ini_file in go-kamonitu" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="soviel" />
    <MESSAGE value="Korrektes Erkennen von Parametern und Env-Variablen" />
    <MESSAGE value="Composed Structs werden nich korrekt verarbeitet" />
    <option name="LAST_COMMIT_MESSAGE" value="Composed Structs werden nich korrekt verarbeitet" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>